<?xml version="1.0"?><st-source><!-- Name: PursuitParcel: #('Pursuit')Date: 11:56:07 am October 26, 2018 --><time-stamp>From VisualWorks® NonCommercial, 7.6 of 3 de Março de 2008 on 26 de Outubro de 2018 at 11:56:07 am</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><name-space><name>Pursuit</name><environment>CormasNS.Models</environment><private>false</private><imports>			private Smalltalk.*			private CormasNS.Kernel.*			</imports><category>PursuitCategory</category><attributes><package>Pursuit</package></attributes></name-space><class><name>Farmer</name><environment>CormasNS.Models.Pursuit</environment><super>CormasNS.Kernel.AgentLocation</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Cormas-Pursuit</category><attributes><package>Pursuit</package></attributes></class><class><name>Pursuit</name><environment>CormasNS.Models.Pursuit</environment><super>CormasNS.Kernel.CormasModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>thePredators thePreys theCells nbPreys nbPredators prey </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Cormas-Pursuit</category><attributes><package>Pursuit</package></attributes></class><class><name>Pig</name><environment>CormasNS.Models.Pursuit</environment><super>CormasNS.Kernel.AgentLocation</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Cormas-Pursuit</category><attributes><package>Pursuit</package></attributes></class><class><name>Pursuit</name><environment>CormasNS.Models.Pursuit</environment><super>CormasNS.Kernel.CormasModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>theFarmers thePigs theCells nbPreys nbPredators prey </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Cormas-Pursuit</category><attributes><package>Pursuit</package></attributes></class><class><name>Cell</name><environment>CormasNS.Models.Pursuit</environment><super>CormasNS.Kernel.SpatialEntityElement</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Cormas-Pursuit</category><attributes><package>Pursuit</package></attributes></class><shared-variable><name>CurrentId</name><environment>CormasNS.Models.Pursuit.Pig</environment><private>false</private><constant>false</constant><category>As yet unclassified</category><attributes><package>Pursuit</package></attributes></shared-variable><shared-variable><name>CurrentId</name><environment>CormasNS.Models.Pursuit.Farmer</environment><private>false</private><constant>false</constant><category>As yet unclassified</category><attributes><package>Pursuit</package></attributes></shared-variable><methods><class-id>CormasNS.Models.Pursuit.Farmer</class-id> <category>control</category><body package="Pursuit" selector="step:">step: buildDestinations 	| destination possiblePlaces |"perceive preys"	possiblePlaces := self perform: buildDestinations.	possiblePlaces isEmpty		ifTrue: [destination := self patch randomNeighbour]		ifFalse: [destination := Cormas selectRandomlyFrom: possiblePlaces].	self moveTowards: destination.	self eat</body></methods><methods><class-id>CormasNS.Models.Pursuit.Farmer</class-id> <category>biology</category><body package="Pursuit" selector="eat">eat	"eats one prey of the current location (with 50% success)"		| listPreys |	listPreys := self patch occupantsType: Pig.	listPreys isEmpty		ifFalse:			[self coinFlipping ifTrue:[(listPreys first)				leave;				dead: true]]</body><body package="Pursuit" selector="neighboursWithPreys">neighboursWithPreys		| collec |	collec := self patch neighbourhoodAndSelf		select: [:a | (a occupantsType: Pig) isEmpty not].	^collec</body><body package="Pursuit" selector="pursuit">pursuit"Returns a list of cells occupied by Preys""^ self patch recursiveNeighbourhood: 2 withAny: Prey."^ self patch nearestNeighborsVerifying: [:c | (c occupantsType: Pig) isEmpty not] withinRadius: 2.</body></methods><methods><class-id>CormasNS.Models.Pursuit.Farmer class</class-id> <category>init</category><body package="Pursuit" selector="resetCurrentId">resetCurrentIdself new CurrentId: nil</body></methods><methods><class-id>CormasNS.Models.Pursuit.Farmer class</class-id> <category>image</category><body package="Pursuit" selector="defaultImage">defaultImage"defaultImage adapted for Cormas versions previous to 2010. Returns a copy of the POV image stored in the povDict of the class at a specifed symbol key"^((self povDict keys includes: #Pursuit_Predator) ifTrue:[self povDict at:#Pursuit_Predator] ifFalse:[super defaultImage]) copy</body></methods><methods><class-id>CormasNS.Models.Pursuit.Farmer class</class-id> <category>pov symbols</category><body package="Pursuit" selector="defaultColor">defaultColor "Returns the default color (Automatically defined by Cormas)." ^ColorValue red</body><body package="Pursuit" selector="VectorialPOV_Farmer">VectorialPOV_Farmer"Returns an array containing the settings of a Situated entity vectorial pov symbol in the following order:(color red) (color green) (color blue) (lineColor red) (lineColor green) (lineColor blue) lineWidth sizeratio position (array of outline vertices) isDistortable." ^#(1.0 0.0 0.0 0.0 0.0 0.0 1 1 #center #(6.0@24.0 3.0@24.0 -2.0@8.0 -7.0@24.0 -11.0@24.0 -7.0@7.0 -8.0@-7.0 -16.0@-5.0 -12.0@3.0 -21.0@-5.0 -7.0@-13.0 -8.0@-20.0 -5.0@-25.0 -1.0@-26.0 3.0@-24.0 5.0@-20.0 4.0@-17.0 2.0@-12.0 11.0@-13.0 17.0@-13.0 19.0@-25.0 20.0@24.0 18.0@-10.0 5.0@-7.0 4.0@9.0 7.0@25.0) true)</body><body package="Pursuit" selector="VectorialPOV_Predator">VectorialPOV_Predator"Returns an array containing the settings of a Situated entity vectorial pov symbol in the following order:(color red) (color green) (color blue) (lineColor red) (lineColor green) (lineColor blue) lineWidth sizeratio position (array of outline vertices) isDistortable." ^#(1.0 0.0 0.0 0.0 0.0 0.0 1 1 #center #(6.0@24.0 3.0@24.0 -2.0@8.0 -7.0@24.0 -11.0@24.0 -7.0@7.0 -8.0@-7.0 -16.0@-5.0 -12.0@3.0 -21.0@-5.0 -7.0@-13.0 -8.0@-20.0 -5.0@-25.0 -1.0@-26.0 3.0@-24.0 5.0@-20.0 4.0@-17.0 2.0@-12.0 11.0@-13.0 17.0@-13.0 19.0@-25.0 20.0@24.0 18.0@-10.0 5.0@-7.0 4.0@9.0 7.0@25.0) true)</body></methods><methods><class-id>CormasNS.Models.Pursuit.Pig</class-id> <category>display</category><body package="Pursuit" selector="showRandomPlaces">showRandomPlacesself randomly do: [:c | c color: #blue].</body><body package="Pursuit" selector="showSafePlaces">showSafePlacesself safePlace do: [:c | c color: #yellow].</body><body package="Pursuit" selector="showVerySafePlaces">showVerySafePlacesself verySafePlace do: [:c | c color: #olive].</body></methods><methods><class-id>CormasNS.Models.Pursuit.Pig</class-id> <category>procedures</category><body package="Pursuit" selector="randomly">randomly	^patch neighbourhood</body><body package="Pursuit" selector="safePlace">safePlace		^self locationsWithoutAny: Farmer withinRadius: 1</body><body package="Pursuit" selector="verySafePlace">verySafePlace| collec safeDestination destinationUnsafeNeighbour potentialDestinations |	collec := Set new.	potentialDestinations := self perception: 1.	potentialDestinations do: 			[:a | 			safeDestination := (a occupantsType: Farmer) isEmpty.			destinationUnsafeNeighbour := a neighbourhood						detect: [:b | (b occupantsType: Farmer) isEmpty not]						ifNone: [nil].			(safeDestination and: [destinationUnsafeNeighbour isNil])				ifTrue: [collec add: a]].	collec remove: self patch ifAbsent: [nil].	^collec asOrderedCollection</body></methods><methods><class-id>CormasNS.Models.Pursuit.Pig</class-id> <category>biology</category><body package="Pursuit" selector="move:">move: buildDestinations	| destination collec |	collec := self perform: buildDestinations.	collec isEmpty		ifTrue: [destination := self patch randomNeighbour]		ifFalse: [destination := Cormas selectRandomlyFrom: collec].	self moveTo: destination</body></methods><methods><class-id>CormasNS.Models.Pursuit.Pig</class-id> <category>control</category><body package="Pursuit" selector="step:">step: buildDestinations	self move: buildDestinations</body></methods><methods><class-id>CormasNS.Models.Pursuit.Pig class</class-id> <category>image</category><body package="Pursuit" selector="defaultImage">defaultImage"defaultImage adapted for Cormas versions previous to 2010. Returns a copy of the POV image stored in the povDict of the class at a specifed symbol key"^((self povDict keys includes: #Pursuit_Prey) ifTrue:[self povDict at:#Pursuit_Prey] ifFalse:[super defaultImage]) copy</body></methods><methods><class-id>CormasNS.Models.Pursuit.Pig class</class-id> <category>pov symbols</category><body package="Pursuit" selector="BitmapPOV_Pig">BitmapPOV_Pig"Returns an array containing the settings of a Situated entity bitmap pov symbol in the following order:(position)The bitmap itself corresponding to the symbol is in the selector #PigBitmapImage"^Array with: #center</body><body package="Pursuit" selector="BitmapPOV_Prey">BitmapPOV_Prey"Returns an array containing the settings of a Situated entity bitmap pov symbol in the following order:(position)The bitmap itself corresponding to the symbol is in the selector #PreyBitmapImage"^Array with: #center</body></methods><methods><class-id>CormasNS.Models.Pursuit.Pursuit</class-id> <category>accessing</category><body package="Pursuit" selector="theCells">theCells^theCells ifNil:[theCells := IndexedSet new]</body><body package="Pursuit" selector="theCells:">theCells: x 	theCells := x</body><body package="Pursuit" selector="theFarmers">theFarmers^theFarmers ifNil:[theFarmers := IndexedSet new]</body><body package="Pursuit" selector="theFarmers:">theFarmers: t 	theFarmers := t</body><body package="Pursuit" selector="thePigs">thePigs^thePigs ifNil:[thePigs := IndexedSet new]</body><body package="Pursuit" selector="thePigs:">thePigs: b 	thePigs := b</body><body package="Pursuit" selector="thePredator">thePredator^ self theFarmers isEmpty ifTrue:[nil] ifFalse: [self theFarmers first]</body><body package="Pursuit" selector="thePrey">thePrey^ self thePigs isEmpty ifTrue:[nil] ifFalse: [self thePigs first]</body></methods><methods><class-id>CormasNS.Models.Pursuit.Pursuit</class-id> <category>init</category><body package="Pursuit" selector="initialisation">initialisation	self createGridX: 05 Y: 05 neighbourhood: 4 closed: true.	self displayPov: #pov of: Cell.	self createN: 02 randomlyLocatedAgents: Farmer.	self displayDefaultPovOf: Farmer.	self createN: 01 randomlyLocatedAgents: Pig.	self displayDefaultPovOf: Pig.      "first part of a trick to automatically repeat running the simulation until a stop condition"	self simManager cormas cycle value: 1</body></methods><methods><class-id>CormasNS.Models.Pursuit.Pursuit</class-id> <category>control</category><body package="Pursuit" selector="step:">step: t	"self ask: Prey toDo: #step: with: #randomly."	"self ask: Prey toDo: #step: with: #safePlace."	self ask: Pig toDo: #step: with: #verySafePlace.	self ask: Farmer toDo: #step: with: #pursuit "vision: 2, movement: 1".		"self ask: Predator toDo: #step: with: #neighboursWithPreys." "vision: 1, movement: 1""second part of a trick to automatically repeat running the simulation until a stop condition""click on 'Run' and let it go!"	self nbPreys isZero		ifFalse:			[self simManager cormas cycle value: self simManager cormas cycle value + 1]</body></methods><methods><class-id>CormasNS.Models.Pursuit.Pursuit</class-id> <category>probes</category><body package="Pursuit" selector="nbPredators">nbPredators"return the data (a number) to be plotted with the nbPredators chart"^self theFarmers size</body><body package="Pursuit" selector="nbPreys">nbPreys"return the data (a number) to be plotted with the nbPreys chart"^self thePigs size</body></methods><methods><class-id>CormasNS.Models.Pursuit.Pursuit class</class-id> <category>description</category><body package="Pursuit" selector="aboutIt">aboutIt	| txt |	txt := 'This  model illustrates the principles of the Cormas situated agents. This kind of agents has an attribute named patch which is a link to the spatial entity where they are located. The elementary spatial entity of Cormas has an attribute named theOccupants which is a register of all the inhabiting agents. This double-way referencing system is used by the situated agents to perceive the surrounding agents in a given range.In this very simple model, the predator agents are trying to catch the prey agents. The predation is effective when the preys are situated on the same cell than a predator. There is no other mortality, there isn''t any reproduction. The number of predators remains the same, as the number of preys will decrease according to the efficiency of the the movement of each kind of agents.The predators can perceive the preys in two different ways, the preys can perceive the predators in three diffrent ways.'				asText emphasizeAllWith: #(#bold).	ComposedTextView open: txt asValue		label: 'About ' , self name		icon: (Icon constantNamed: #workspace)		extent: 500 @ 370</body><body package="Pursuit" selector="authors">authors^ ' '	</body><body package="Pursuit" selector="comments">comments^ ''	</body><body package="Pursuit" selector="cormasCompatibleVersion">cormasCompatibleVersion^ #(2018 9 3 1 0 29)</body><body package="Pursuit" selector="creationDate">creationDate^ '26 de Outubro de 2018'	</body><body package="Pursuit" selector="currentDeveloperName">currentDeveloperName^ ' '	</body><body package="Pursuit" selector="emails">emails^ ' '	</body><body package="Pursuit" selector="howToRunIt">howToRunIt| txt |	txt := '1. Look at the definition of viewpoints\' withCRs asText emphasizeAllWith: #(#bold #large).	txt := txt, '1.1 In the ' asText, ('Model ' asText emphasizeAllWith: #color -&gt; ColorValue red), 'area, at the bottom-right, in the ' asText, ('Define the observation ' asText emphasizeAllWith: #italic), 'scrolling menu, choose the ' asText, ('Space ' asText emphasizeAllWith: #italic), 'option. A window opens for the definition of viewpoints.\' withCRs asText.txt := txt, '1.2 In the situated entities list, at the top-left, select ' asText, ('Pursuit_Prey ' asText emphasizeAllWith: #italic), '. By clicking on the associated symbol, you can visualize the color (blue) and the shape (circle) corresponding to this agent.\' withCRs asText. txt := txt, '1.3 In the situated entities list, at the top-left, select ' asText, ('Pursuit_Predator ' asText emphasizeAllWith: #italic), '. By clicking on the associated symbol, you can visualize the color (red) and the shape (diamond) associated to this agent.\\' withCRs asText.txt := txt, ('2. Prepare the visualisation of the spatial grid\' withCRs asText emphasizeAllWith: #(#bold #large)).txt := txt, '2.1 Click on the first icon of the ' asText, ('Visualisation ' asText emphasizeAllWith: #color -&gt; ColorValue red), 'area to open the standard spatial grid\' withCRs asText.txt := txt, '2.2 Choose closed boundaries rather than toroidal (menu ' asText, ('Topology -&gt; Grid boundaries' asText emphasizeAllWith: #italic), ').\' withCRs asText.txt := txt, '2.3 In the ' asText, ('Topology ' asText emphasizeAllWith: #italic), 'menu, clicking on the ' asText, ('Grid size ' asText emphasizeAllWith: #italic), 'item opens a window allowing you to choose the number of lines and columns. For example, choose 30 * 30.\' withCRs asText.txt := txt, '2.4 Right-click within the spatial grid window to access the ' asText, ('&lt;operate&gt; ' asText emphasizeAllWith: #italic), 'menu and then select the ' asText, ('pov ' asText emphasizeAllWith: #italic), 'view for each of the three model''s entities.\\' withCRs asText.txt := txt, ('3. Run the basic version of the model\' withCRs asText emphasizeAllWith: #(#bold #large)).txt := txt, '3.1 Click on the ' asText, ('Initialize ' asText emphasizeAllWith: #italic), 'button of the ' asText, ('Simulation ' asText emphasizeAllWith: #color -&gt; ColorValue red),  'area.\' withCRs asText.txt := txt, '3.2 Select the ' asText, ('initialisation ' asText emphasizeAllWith: #italic), 'and ' asText, ('step: ' asText emphasizeAllWith: #italic), 'methods, then validate by clicking on ' asText, ('Apply and close.\' asText emphasizeAllWith: #italic) withCRs asText.txt := txt, '3.3 Enter 50 in the ' asText, ('Final time ' asText emphasizeAllWith: #italic), 'input field of the ' asText,  ('Simulation ' asText emphasizeAllWith: #color -&gt; ColorValue red),  'area.\' withCRs asText.txt := txt, '3.4 Click on the ' asText, ('Run ' asText emphasizeAllWith: #italic), 'button of the ' asText,  ('Simulation ' asText emphasizeAllWith: #color -&gt; ColorValue red),  'area.\\' withCRs asText.txt := txt, ('4. Have a look at the charts\' withCRs asText emphasizeAllWith: #(#bold #large)).txt := txt, '4.1 Click on the third icon of the ' asText, ('Visualisation ' asText emphasizeAllWith: #color -&gt; ColorValue red), 'area to open the charts window.\\' withCRs asText.txt := txt, ('5. Run alternative versions of the model\' withCRs asText emphasizeAllWith: #(#bold #large)).txt := txt, '5.1 Click on ' asText, ('Prepare and Schedule '  asText emphasizeAllWith: #italic), 'and edit the ' asText, ('step: '  asText emphasizeAllWith: #italic), 'method (in the ' asText, ('control '  asText emphasizeAllWith: #italic), 'protocol). Change the behaviour of the preys and/or the predators by commenting and uncommenting instructions. Right-click to accept your change and run the model again.\' withCRs asText.ComposedTextView open: txt asValue label: ('How to run ', self name, '     step-by-step instructions') icon: (Icon constantNamed: #workspace) extent: 650@600</body><body package="Pursuit" selector="lastUpdate">lastUpdate^ '26 de Outubro de 2018'	</body><body package="Pursuit" selector="version">version^ 'Pursuit.pcl'	</body><body package="Pursuit" selector="versionComments">versionComments^ '  --------------------- Pursuit.pcl --------------------- Date: 2012.5.6 - 20:29:40Compatible with Cormas 2012 *** Developer:   *** --------------------- Pursuit.pcl --------------------- Date: 2018.10.17 *** Developer:   *** --------------------- Pursuit.pcl --------------------- Date: 2018.9.3 *** Developer:   *** --------------------- Pursuit.pcl --------------------- Date: 2018.9.3 *** Developer:   *** --------------------- Pursuit.pcl --------------------- Date: 2018.9.3 *** Developer:   *** --------------------- Pursuit.pcl --------------------- Date: 2018.9.3 *** Developer:   *** --------------------- Pursuit.pcl --------------------- Date: 2018.9.3 *** Developer:   ***'	</body><body package="Pursuit" selector="vwCompatibleVersion">vwCompatibleVersion^ '7.6'	</body></methods><methods><class-id>CormasNS.Models.Pursuit.Cell</class-id> <category>pov</category><body package="Pursuit" selector="pov">pov^#empty</body></methods><methods><class-id>CormasNS.Models.Pursuit.Cell class</class-id> <category>pov symbols</category><body package="Pursuit" selector="SpatialEntityPOV_empty">SpatialEntityPOV_empty"Returns an array containing the settings of a Spatial entity pov symbol in the following order:(color red) (color green) (color blue)"^Array with: 1.0 with: 1.0 with: 1.0</body></methods><methods><class-id>CormasNS.Models.Pursuit.Pig class</class-id> <category>pov symbols</category><body package="Pursuit" selector="PigBitmapImage">PigBitmapImage		&lt;resource: #image&gt;	^(Image extent: 45@30 depth: 6 bitsPerPixel: 8 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5846 5846 5846)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2055 2055 2055)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6874 6874 6874)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(449 449 449)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4400 4400 4400)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1188 1188 1188)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5428 5428 5428)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3822 3822 3822)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2216 2216 2216)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7484 7484 7484)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(32 32 32)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4272 4272 4272)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(770 770 770)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3983 3983 3983)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(481 481 481)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7644 7644 7644)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(192 192 192)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2087 2087 2087)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3115 3115 3115)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7066 7066 7066)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2537 2537 2537)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3404 3404 3404)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2248 2248 2248)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6488 6488 6488)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6199 6199 6199)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1670 1670 1670)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(64 64 64)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5621 5621 5621)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2698 2698 2698)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6649 6649 6649)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(224 224 224)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1541 1541 1541)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1252 1252 1252)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4175 4175 4175)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(963 963 963)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2280 2280 2280)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(674 674 674)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7837 7837 7837)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6809 6809 6809)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(96 96 96)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2441 2441 2441)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(835 835 835)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1573 1573 1573)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7130 7130 7130)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5524 5524 5524)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(995 995 995)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5814 5814 5814)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3180 3180 3180)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3340 3340 3340)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1734 1734 1734)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(128 128 128)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(417 417 417)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2762 2762 2762)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1445 1445 1445)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5107 5107 5107)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4818 4818 4818)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3212 3212 3212)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: '@0LC@0LC@0LC@0LC@0LC@0LKER4Q@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@@@@@0LC@0LC@0LC@0LAC2(/H@@@@@@@H@8,M 4AI0LC@0LC@0LC@0LC@0LC@0LC@@@@@0LC@0LC@0L]E"@@@@@@@@@@@@@@@@@@@@@@H@H9@0LC@0LC@0LC@0LC@0LC@@@@@0LC@0LCGRH@@@@@@@@@@@@@@@@@@@@@@@@@@@@@D#X_@0LC@0LC@0LC@0LC@@@@@0LC@0,%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LG"4C@0LC@0LC@0LC@@@@@0LCG2P@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B@8@0PC@0LC@0LC@@@@@0L.D@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@H@@&ampamp;FBLAB0LC@@@@@0LC@0L3@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ N@LC@24C@0LC@0LC@@@@@0LC@0LQIP@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CL_@0LC@0LC@0LC@0LC@@@@@0LC@0LCA@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@N@LC@0LC@0LC@0LC@0LC@@@@@0LC@0LCA @@@@@EE3LP@@@@@@@@@CT"M $@@@@4@0LC@0LC@0LC@0LC@0LC@@@@@0LC@0LCF0@@@@@6@0LC@24DJAT-@0LC@0L@@@@B@0LC@0LC@0LC@0LC@0LC@@@@@0LC@0LCC@@@@@@]@0LC@0LC@0LC@0LC@0L@@@@1@0LC@0LC@0LC@0LC@0LC@@@@@0LC@0LCL0@@@A@C@0LC@0LC@0LC@0LC@0L@@@@C@0LC@0LC@0LC@0LC@0LC@@@@@0LC@0LCFQ0@@CXC@0LC@0LC@0LC@0LC@0L@@@@C@0LC@0LC@0LC@0LC@0LC@@@@@0LC@0LC@3(@@A C@0LC@0LC@0LC@0LC@0L@@B$C@0LC@0LC@0LC@0LC@0LC@@@@@0LC@0LC@0L5@A@C@0LC@0LC@0LC@0LC@0L@@C\C@0LC@0LC@0LC@0LC@0LC@@@@@0LC@0LC@0L@@@@@@0LC@0LC@0LC@0LC@0L@@@@@@0LC@0LC@0LC@0LC@0LC@@@@'))</body><body package="Pursuit" selector="PreyBitmapImage">PreyBitmapImage		&lt;resource: #image&gt;	^(Image extent: 45@30 depth: 6 bitsPerPixel: 8 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5846 5846 5846)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2055 2055 2055)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6874 6874 6874)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(449 449 449)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4400 4400 4400)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1188 1188 1188)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5428 5428 5428)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3822 3822 3822)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2216 2216 2216)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7484 7484 7484)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(32 32 32)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4272 4272 4272)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(770 770 770)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3983 3983 3983)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(481 481 481)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7644 7644 7644)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(192 192 192)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2087 2087 2087)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3115 3115 3115)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7066 7066 7066)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2537 2537 2537)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3404 3404 3404)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2248 2248 2248)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6488 6488 6488)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6199 6199 6199)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1670 1670 1670)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(64 64 64)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5621 5621 5621)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2698 2698 2698)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6649 6649 6649)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(224 224 224)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1541 1541 1541)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1252 1252 1252)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4175 4175 4175)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(963 963 963)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2280 2280 2280)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(674 674 674)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7837 7837 7837)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6809 6809 6809)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(96 96 96)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2441 2441 2441)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(835 835 835)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1573 1573 1573)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7130 7130 7130)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5524 5524 5524)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(995 995 995)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5814 5814 5814)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3180 3180 3180)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3340 3340 3340)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1734 1734 1734)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(128 128 128)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(417 417 417)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2762 2762 2762)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1445 1445 1445)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5107 5107 5107)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4818 4818 4818)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3212 3212 3212)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: '@0LC@0LC@0LC@0LC@0LC@0LKER4Q@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@@@@@0LC@0LC@0LC@0LAC2(/H@@@@@@@H@8,M 4AI0LC@0LC@0LC@0LC@0LC@0LC@@@@@0LC@0LC@0L]E"@@@@@@@@@@@@@@@@@@@@@@H@H9@0LC@0LC@0LC@0LC@0LC@@@@@0LC@0LCGRH@@@@@@@@@@@@@@@@@@@@@@@@@@@@@D#X_@0LC@0LC@0LC@0LC@@@@@0LC@0,%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LG"4C@0LC@0LC@0LC@@@@@0LCG2P@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B@8@0PC@0LC@0LC@@@@@0L.D@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@H@@&ampamp;FBLAB0LC@@@@@0LC@0L3@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ N@LC@24C@0LC@0LC@@@@@0LC@0LQIP@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CL_@0LC@0LC@0LC@0LC@@@@@0LC@0LCA@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@N@LC@0LC@0LC@0LC@0LC@@@@@0LC@0LCA @@@@@EE3LP@@@@@@@@@CT"M $@@@@4@0LC@0LC@0LC@0LC@0LC@@@@@0LC@0LCF0@@@@@6@0LC@24DJAT-@0LC@0L@@@@B@0LC@0LC@0LC@0LC@0LC@@@@@0LC@0LCC@@@@@@]@0LC@0LC@0LC@0LC@0L@@@@1@0LC@0LC@0LC@0LC@0LC@@@@@0LC@0LCL0@@@A@C@0LC@0LC@0LC@0LC@0L@@@@C@0LC@0LC@0LC@0LC@0LC@@@@@0LC@0LCFQ0@@CXC@0LC@0LC@0LC@0LC@0L@@@@C@0LC@0LC@0LC@0LC@0LC@@@@@0LC@0LC@3(@@A C@0LC@0LC@0LC@0LC@0L@@B$C@0LC@0LC@0LC@0LC@0LC@@@@@0LC@0LC@0L5@A@C@0LC@0LC@0LC@0LC@0L@@C\C@0LC@0LC@0LC@0LC@0LC@@@@@0LC@0LC@0L@@@@@@0LC@0LC@0LC@0LC@0L@@@@@@0LC@0LC@0LC@0LC@0LC@@@@'))</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>CormasModel</name><environment>CormasNS.Kernel</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>cormas timeStepValue channel activeInit activeControl spaceModel data simManager database collector defaultAttributesSetter sensitivitySetter delayedChanges allClassVarBOSS stepIsEnded userInterfaceModel </inst-vars><class-inst-vars>timeStep cellClass spatialClasses socialClasses passiveClasses povColorsDict visualStateIsOpen charts activeProbes activityDiagrams currentSimulation randUi autoUpdating threadDumps </class-inst-vars><imports></imports><category>CormasKernel-Interface</category><attributes><package>Cormas</package></attributes></class><class><name>SpatialEntityElement</name><environment>CormasNS.Kernel</environment><super>CormasNS.Kernel.SpatialEntity</super><private>false</private><indexed-type>none</indexed-type><inst-vars>orderedNeighbourhood </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>CormasKernel-Entities</category><attributes><package>Cormas</package></attributes></class><class><name>AgentLocation</name><environment>CormasNS.Kernel</environment><super>CormasNS.Kernel.Agent</super><private>false</private><indexed-type>none</indexed-type><inst-vars>patch </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>CormasKernel-Entities</category><attributes><package>Cormas</package></attributes></class></st-source>